(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[971],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||s;return n?a.createElement(f,o(o({ref:t},l),{},{components:n})):a.createElement(f,o({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2682:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var a=n(2122),r=n(9756),s=(n(7294),n(3905)),o=["components"],i={id:"exempt-namespaces",title:"Exempting Namespaces"},p=void 0,c={unversionedId:"exempt-namespaces",id:"exempt-namespaces",isDocsHomePage:!1,title:"Exempting Namespaces",description:"Exempting Namespaces from Gatekeeper using config resource",source:"@site/docs/exempt-namespaces.md",sourceDirName:".",slug:"/exempt-namespaces",permalink:"/gatekeeper/website/docs/exempt-namespaces",editUrl:"https://github.com/open-policy-agent/gatekeeper/edit/master/website/docs/exempt-namespaces.md",version:"current",frontMatter:{id:"exempt-namespaces",title:"Exempting Namespaces"},sidebar:"docs",previous:{title:"Replicating Data",permalink:"/gatekeeper/website/docs/sync"},next:{title:"Policy Library",permalink:"/gatekeeper/website/docs/library"}},l=[{value:"Exempting Namespaces from Gatekeeper using config resource",id:"exempting-namespaces-from-gatekeeper-using-config-resource",children:[]},{value:"Exempting Namespaces from the Gatekeeper Admission Webhook using <code>--exempt-namespace</code> flag",id:"exempting-namespaces-from-the-gatekeeper-admission-webhook-using---exempt-namespace-flag",children:[]}],m={toc:l};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"exempting-namespaces-from-gatekeeper-using-config-resource"},"Exempting Namespaces from Gatekeeper using config resource"),(0,s.kt)("p",null,"The config resource can be used as follows to exclude namespaces from certain processes for all constraints in the cluster. To exclude namespaces at a constraint level, use ",(0,s.kt)("inlineCode",{parentName:"p"},"excludedNamespaces")," in the ",(0,s.kt)("a",{parentName:"p",href:"/gatekeeper/website/docs/howto#constraints"},"constraint")," instead."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: config.gatekeeper.sh/v1alpha1\nkind: Config\nmetadata:\n  name: config\n  namespace: "gatekeeper-system"\nspec:\n  match:\n    - excludedNamespaces: ["kube-system", "gatekeeper-system"]\n      processes: ["*"]\n    - excludedNamespaces: ["audit-excluded-ns"]\n      processes: ["audit"]\n    - excludedNamespaces: ["audit-webhook-sync-excluded-ns"]\n      processes: ["audit", "webhook", "sync"]\n...\n')),(0,s.kt)("p",null,"Available processes:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"audit")," process exclusion will exclude resources from specified namespace(s) in audit results."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"webhook")," process exclusion will exclude resources from specified namespace(s) from the admission webhook."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"sync")," process exclusion will exclude resources from specified namespace(s) from being synced into OPA."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"*")," includes all current processes above and includes any future processes.")),(0,s.kt)("h2",{id:"exempting-namespaces-from-the-gatekeeper-admission-webhook-using---exempt-namespace-flag"},"Exempting Namespaces from the Gatekeeper Admission Webhook using ",(0,s.kt)("inlineCode",{parentName:"h2"},"--exempt-namespace")," flag"),(0,s.kt)("p",null,"Note that the following only exempts resources from the admission webhook. They will still be audited. Editing individual constraints or ",(0,s.kt)("a",{parentName:"p",href:"#exempting-namespaces-from-gatekeeper-using-config-resource"},"config resource")," is\nnecessary to exclude them from audit."),(0,s.kt)("p",null,"If it becomes necessary to exempt a namespace from Gatekeeper webhook entirely (e.g. you want ",(0,s.kt)("inlineCode",{parentName:"p"},"kube-system")," to bypass admission checks), here's how to do it:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Make sure the validating admission webhook configuration for Gatekeeper has the following namespace selector:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"  namespaceSelector:\n    matchExpressions:\n    - key: admission.gatekeeper.sh/ignore\n      operator: DoesNotExist\n")),(0,s.kt)("p",{parentName:"li"},"the default Gatekeeper manifest should already have added this. The default name for the\nwebhook configuration is ",(0,s.kt)("inlineCode",{parentName:"p"},"gatekeeper-validating-webhook-configuration")," and the default\nname for the webhook that needs the namespace selector is ",(0,s.kt)("inlineCode",{parentName:"p"},"validation.gatekeeper.sh"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Tell Gatekeeper it's okay for the namespace to be ignored by adding a flag to the pod:\n",(0,s.kt)("inlineCode",{parentName:"p"},"--exempt-namespace=<NAMESPACE NAME>"),". This step is necessary because otherwise the\npermission to modify a namespace would be equivalent to the permission to exempt everything\nin that namespace from policy checks. This way a user must explicitly have permissions\nto configure the Gatekeeper pod before they can add exemptions.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Add the ",(0,s.kt)("inlineCode",{parentName:"p"},"admission.gatekeeper.sh/ignore")," label to the namespace. The value attached\nto the label is ignored, so it can be used to annotate the reason for the exemption."))))}u.isMDXComponent=!0}}]);